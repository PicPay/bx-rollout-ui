- show_feature ||= false
- show_header ||= false

- if events.any?
  h2.font-semibold.text-xl.text-gray-500.pt-20.flex.items-center
    | History
  .w-8.h-1.bg-gray-300.my-10

  .overflow-auto.scrolling-touch
    table.text-sm.w-100.text-left.w-full
      - if show_header
        thead.font-semibold.text-gray-600.border-b.border-gray-200
          - if show_feature
            th.pb-2.pr-3.whitespace-nowrap Feature
          th.pb-2.pr-3.w-full Action
          th.pl-2.whitespace-nowrap style="min-width: 160px;"

      tbody.text-gray-600.border-t.border-gray-200
        - events.each do |event|
          tr.border-b.border-gray-200
            - if show_feature
              td.py-2.pr-3.whitespace-nowrap
                a.text-blue-600(href=feature_path(event.feature) class='hover:text-blue-700 hover:underline')
                  = event.feature
            td.py-2.pr-3.break-words.w-full
              - if event.name == "update"
                - if event.context && event.context[:actor]
                  - if config.defined?(:actor_url)
                    a.underline> href=config.get(:actor_url, event.context[:actor]) target='_blank'
                      = event.context[:actor]
                  - else
                    ' #{event.context[:actor]}
                - else
                  ' unidentified user
                - changes = event.data.fetch(:before).keys.reject { |key| key.to_s == 'data.updated_at' }.map do |key|
                  - before = format_change_value(event.data.fetch(:before).fetch(key))
                  - after = format_change_value(event.data.fetch(:after).fetch(key))
                  - "#{format_change_key(key)} from #{before} to #{after}"

                ' changed
                - unless changes.empty?
                  = changes.join(', ')
                - else
                  ' nothing!
              - else
                = event.data

            td.py-2.text-right.whitespace-nowrap.pl-3 style="min-width: 160px;"
              span title=event.created_at.strftime(Rollout::UI.config.timestamp_format) = time_ago(event.created_at)
